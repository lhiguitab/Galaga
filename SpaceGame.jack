// Archivo principal del juego
class SpaceGame {
    field Ship ship;             // La nave espacial del jugador
    field EnemyFleet enemies;    // La flota de naves enemigas
    field int direction;         // Dirección actual del movimiento (-1: izquierda, 0: quieto, 1: derecha)
    field boolean exit;          // Flag para salir del juego
    field int enemyCount;        // Número de naves enemigas

    // Constructor
    constructor SpaceGame new() {
        // Inicializa la nave en el centro de la pantalla
        let ship = Ship.new(256, 220);  // x=256 (centro), y=220 (cerca del fondo)
        let direction = 0;
        let exit = false;
        let enemyCount = 5;      // Horda de 5 naves enemigas en la parte superior
        
        // Inicializa la flota de naves enemigas estáticas en la parte superior
        let enemies = EnemyFleet.new(enemyCount);
        
        return this;
    }

    // Método para liberar memoria
    method void dispose() {
        do ship.dispose();
        do enemies.dispose();
        do Memory.deAlloc(this);
        return;
    }

    // Método para manejar la entrada del teclado
    method void handleInput() {
        var char key;
        let key = Keyboard.keyPressed();

        if (key = 130) {          // Flecha izquierda
            let direction = -1;
        }
        if (key = 132) {          // Flecha derecha
            let direction = 1;
        }
        if (key = 0) {            // No hay tecla presionada
            let direction = 0;
        }
        if (key = 81) {           // 'q' para salir
            let exit = true;
        }

        return;
    }

    // Método para actualizar el estado del juego
    method void update() {
        if (direction = -1) {
            do ship.moveLeft();
        }
        if (direction = 1) {
            do ship.moveRight();
        }
        do enemies.update();

        return;
    }

    // Método para dibujar la pantalla
    method void draw() {
        // Limpia la pantalla
        do Screen.clearScreen();

        // Dibuja la nave del jugador
        do ship.draw();
        
        // Dibuja las naves enemigas
        do enemies.draw();

        // Espera un poco para que la animación sea visible
        do Sys.wait(50);

        return;
    }

    // Método principal que ejecuta el juego
    method void run() {
        while (~exit) {
            do handleInput();
            do update();
            do draw();
            
            // Si todas las naves enemigas son destruidas, crea una nueva flota
            if (enemies.allDestroyed()) {
                do enemies.dispose();
                let enemies = EnemyFleet.new(enemyCount);
            }
        }

        return;
    }
}